name: Release

on:
  release:
    types: [published]

  workflow_dispatch:

env:
  REPOSITORY_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Install
        run: |
          yarn

      - name: Build Extension
        run: |
          yarn build:production

      - name: Zip Folder
        run: | 
          zip -jr ${{ env.REPOSITORY_NAME }}-${{ github.event.release.tag_name }}.zip ./extension/*

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          path: ${{ env.REPOSITORY_NAME }}-${{ github.event.release.tag_name }}.zip

      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.REPOSITORY_NAME }}-${{ github.event.release.tag_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}